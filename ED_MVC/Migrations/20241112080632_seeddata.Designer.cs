// <auto-generated />
using System;
using ED_MVC.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ED_MVC.Migrations
{
    [DbContext(typeof(ChocoContext))]
    [Migration("20241112080632_seeddata")]
    partial class seeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ED_MVC.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Premium Chocolate Bars, Chocolate Boxes and Pralines. Premium dark, milk and white chocolate. Gift boxes available.",
                            ImageLoc = "category_chocolates.jpg",
                            Name = "Chocolates and Pralines"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cakes, Tarts and Pies. High quality premium chocolate based deserts available in a handpicked collection of various flavors and fillings.",
                            ImageLoc = "category_pies.jpg",
                            Name = "Pies"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Chocolate Ice Cream and Ice Creamsicles. High quality fresh ice cream based on our premium chocolate products.",
                            ImageLoc = "category_icecream.jpg",
                            Name = "Ice Cream"
                        });
                });

            modelBuilder.Entity("ED_MVC.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "High Quality Milk Chocolate Bar 30% Cocoa 200g",
                            ImageLoc = "product_milkbar.jpg",
                            Name = "Milk Chocolate Bar",
                            Price = 4.35m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Premium Cocoa Butter White Chocolate Bar 210g",
                            ImageLoc = "product_whitechocolate.jpg",
                            Name = "White Chocolate Bar",
                            Price = 5.20m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "6 60g Chocolate Ice Creamsicles with praline filling",
                            ImageLoc = "product_creamsicles.jpg",
                            Name = "Chocolate Ice Creamsicles",
                            Price = 5.20m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Chocolate Cake with Raspberry Flavoring, 650g",
                            ImageLoc = "product_cake.jpg",
                            Name = "Chocolate and Raspberry Cake",
                            Price = 35.25m
                        });
                });

            modelBuilder.Entity("ED_MVC.Domain.Product", b =>
                {
                    b.HasOne("ED_MVC.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ED_MVC.Domain.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
